	Procedure pInfoSiniestro Is
		lnSucursal	Number 			:= :Parameter.pSucursal;
		lnRamo 			Number 			:= :Parameter.pRamo;
		lnSiniestro Number 			:= :Parameter.pSiniestro;
		lnRamoC     Number 		  := Nvl(:Dt_Cobertura.CARB_CD_RAMO,:Parameter.pRamoC);
		lnCobert		Varchar2(3) := Nvl(:Dt_Cobertura.CACB_CD_COBERTURA,:Parameter.pCobertura);
		lvMessage		Varchar2(2000);
		--Variables para almacenar valores de poliza.
		lnSucPol		Sint_Movimientos_Coberturas_Ce.Smcc_Sicc_Casu_Cd_Sucursal%Type;
		lnRamoPol   Sint_Movimientos_Coberturas_Ce.Smcc_Sicc_Carp_Cd_Ramo%Type;
		lnPoliza 	  Sint_Movimientos_Coberturas_Ce.Smcc_Sicc_Cace_Capo_Nu_Poliza%Type;
		lnCert			Sint_Movimientos_Coberturas_Ce.Smcc_Sicc_Cace_Nu_Certificado%Type;
	Begin
		--Obtener la informacion del siniestro
		:Db_Siniestro.SISI_CASU_CD_SUCURSAL  := lnSucursal;
		:Db_Siniestro.SISI_SICS_CARP_CD_RAMO := lnRamo;
		:Db_Siniestro.SISI_NU_SINIESTRO      := lnSiniestro;
	
		-- Datos del siniestro
		Begin
			Select Sisi_Fe_Ocurrencia, SISI_ST_SINIESTRO
			     , Substr(Cacn.Cacn_Nm_Apellido_Razon,1,60)
			  Into :Db_Siniestro.SISI_FE_OCURRENCIA, :Db_Siniestro.SISI_ST_SINIESTRO
			     , :Db_Siniestro.DSP_CACN_NM_APELLIDO_RAZON
			  From Sint_Siniestros
			     , Cart_Clientes Cacn
			 Where Sisi_Casu_Cd_Sucursal = lnSucursal
			   And Sisi_Nu_Siniestro		 = lnSiniestro
			   And Sisi_Cacn_Cd_Nacionalidad = Cacn.Cacn_Cd_Nacionalidad
			   And Sisi_Cacn_Nu_Cedula_Rif = Cacn.Cacn_Nu_Cedula_Rif;
		Exception
			When Others Then
				:Db_Siniestro.SISI_FE_OCURRENCIA := Null;
		End;
		--Obtiene Suma Asegurada Pendiente por Reserva-Prioridad
    :GLOBAL.SAP:= nvl(Pkg_Sint_LUC.fCalcula_Rva_Pendiente ( pCanal       => lnSucursal,
																							              pRamo			   => lnRamo,
																							              pPoliza		   => lnPoliza,
																							              pCertificado => lnCert,
			                                                      pFecOcurre	 => :Db_Siniestro.SISI_FE_OCURRENCIA,
			                                                      pRamoCont    => 10 ) ,0);  
		
		-- Descripcion del estatus
		:Db_Siniestro.SISI_DST_SINIESTRO	:= pack_tapoyo.F_GET_DESCRIP('0STATSIN',:Db_Siniestro.SISI_ST_SINIESTRO);
 				
		--Obtener la informacion general de la poliza
		Begin
			Select Sice_Cace_Casu_Cd_Sucursal
						,Sice_Cace_Carp_Cd_Ramo
						,Sice_Cace_Capo_Nu_Poliza
						,Sice_Cace_Nu_Certificado
						,SICE_NU_BENEFICIARIO
				Into :Db_Poliza.Sice_Cace_Casu_Cd_Sucursal
						,:Db_Poliza.Sice_Cace_Carp_Cd_Ramo
						,:Db_Poliza.Sice_Cace_Capo_Nu_Poliza
						,:Db_Poliza.Sice_Cace_Nu_Certificado
						,:Db_Poliza.SICE_NU_BENEFICIARIO
			  From Sint_Certificados_Siniestros
			 Where Sice_Sisi_Casu_Cd_Sucursal = lnSucursal
			   And Sice_Sisi_Nu_Siniestro     = lnSiniestro;
		Exception
			When Others Then
				:Db_Poliza.Sice_Cace_Casu_Cd_Sucursal := Null;
			  :Db_Poliza.Sice_Cace_Carp_Cd_Ramo 		:= Null;
				:Db_Poliza.Sice_Cace_Capo_Nu_Poliza 	:= Null;
				:Db_Poliza.Sice_Cace_Nu_Certificado 	:= Null;		
		End;
		
		lnSucPol  := :Db_Poliza.Sice_Cace_Casu_Cd_Sucursal;
		lnRamoPol := :Db_Poliza.Sice_Cace_Carp_Cd_Ramo;
		lnPoliza  := :Db_Poliza.Sice_Cace_Capo_Nu_Poliza;
		lnCert    := :Db_Poliza.Sice_Cace_Nu_Certificado;
		---
		Go_Block('DT_COBERTURA');
		First_Record;
		For i In (Select Sicc_Sisi_Casu_Cd_Sucursa  , Sicc_Sico_Sisi_Nu_Siniestro,
										 Sicc_Sico_Cacb_Carb_Cd_Ramo, Sicc_Sico_Cacb_Cd_Cobertura, 
										 Sicc_Mt_Liquidacion			  , C.Carb_De_Ramo         ,
										 O.Cacb_De_Cobertura     , 
										 Sicc_Mt_Pago								, Sicc_Mt_Rechazo						 , 
										 Sicc_Mt_Ajustado						, Nvl(Sicc_Mt_SumaSeg,0) Suma_Aseg,
										 Sicc_Mt_Reserva            , to_number (u.scb_columna_1) prioridad
							  From Sint_Reserva_Cobertura_Certifi ,
	                   Cart_Ramos_Contables           C,
	                   Cart_Coberturas                O,
	                   Sint_cob_luc                   U 
							 Where C.Carb_Cd_Ramo              = Sicc_Sico_Cacb_Carb_Cd_Ramo
							   And O.Cacb_Carb_Cd_Ramo         = Sicc_Sico_Cacb_Carb_Cd_Ramo
							   And O.Cacb_Cd_Cobertura         = Sicc_Sico_Cacb_Cd_Cobertura
							   And Sicc_Sisi_Casu_Cd_Sucursa   = lnSucursal
							   And Sicc_Sice_Cace_Carp_Cd_Ramo = lnRamo
							   And Sicc_Sico_Sisi_Nu_Siniestro = lnSiniestro
                 And u.scb_carp_ramo(+)          = sicc_sice_cace_carp_cd_ramo
                 And u.scb_carb_ramo(+)          = Sicc_Sico_Cacb_Carb_Cd_Ramo
                 And u.scb_cacb_cobertura(+)     = Sicc_Sico_Cacb_Cd_Cobertura
                 Order by prioridad)
		Loop
			:Dt_Cobertura.CARB_CD_RAMO        := i.Sicc_Sico_Cacb_Carb_Cd_Ramo;
			:Dt_Cobertura.CARB_DE_RAMO        := nvl(i.Carb_De_Ramo,'INVALIDO');
			:Dt_Cobertura.CACB_CD_COBERTURA   := i.Sicc_Sico_Cacb_Cd_Cobertura;
			:Dt_Cobertura.CACB_DE_COBERTURA   := nvl(i.Cacb_De_Cobertura,'INVALIDO');
			:Dt_Cobertura.PRIORIDAD           := i.Prioridad; 
			:Dt_Cobertura.SICC_MT_SUMASEG   := i.Suma_Aseg;
			:GLOBAL.MT_SUMA_ASEGURADA   := i.Suma_Aseg;
			:Dt_Cobertura.SICC_MT_RESERVA 		:= i.Sicc_Mt_Reserva;
			:Dt_Cobertura.SICC_MT_AJUSTADO 		:= i.Sicc_Mt_Ajustado;
			:Dt_Cobertura.SICC_MT_LIQUIDACION := i.Sicc_Mt_Liquidacion;
			--Calcular el saldo actual de la cobertura
			:Dt_Cobertura.MT_SALDO 						:= Pkg_Utilerias.fObtenerSaldo(lnSiniestro, lnSucursal,i.Sicc_Sico_Cacb_Cd_Cobertura, i.Sicc_Sico_Cacb_Carb_Cd_Ramo);
		  
		  --
	 	  Begin
				SELECT nvl(sum(z.smcc_mt_movimiento),0) * -1
		      INTO :Dt_Cobertura.SICC_MT_RECHAZO
		      FROM sint_movimientos_coberturas_ce z
		     WHERE z.smcc_sims_casu_cd_sucursal   = lnSucursal 
		       AND z.smcc_sims_sisi_nu_siniestro  = lnSiniestro
		       AND z.Smcc_Sicc_Cacb_Cd_Cobertura 	= lnCobert
		       AND z.Smcc_Sicc_Carb_Cd_Ramo				= lnRamoC
		       AND z.smcc_sims_tp_movimiento IN ('CR')       
		       AND TRUNC(z.smcc_sims_fe_movimiento) <= Sysdate;
			Exception	When Others Then
					:Dt_Cobertura.SICC_MT_RECHAZO := 0;
			End;
		
			--Validar suma asegurada
			If Nvl(:DT_GLOBAL.MT_SUMA_ASEGURADA,0) = 0 Then
				If PKG_UTILERIAS.fObtenerSumaAsegurada(:DB_POLIZA.SICE_CACE_CASU_CD_SUCURSAL, :DB_POLIZA.SICE_CACE_CARP_CD_RAMO, :DB_POLIZA.SICE_CACE_CAPO_NU_POLIZA, 
						  																 :DB_POLIZA.SICE_CACE_NU_CERTIFICADO  , :DT_COBERTURA.CARB_CD_RAMO       , :DT_COBERTURA.CACB_CD_COBERTURA    , 
						  																 :DB_SINIESTRO.SISI_FE_OCURRENCIA	    , lvMessage)Then
			  --If PKG_UTILERIAS.fObtenerSumaAsegurada (lvMessage) Then
					:Dt_Cobertura.SICC_MT_SUMASEG := :DT_GLOBAL.MT_SUMA_ASEGURADA;
				End If;
			End If;
			
			-- Asignar los montos actuales									   												  					
		--	pAsignaMontos;
		
			Next_Record; 
		End Loop;

  -- Remesa
	 	Begin
			Select Gioseg.Seq_SINT_TMP_MASIVO.NextVal
       Into :GLOBAL.RemesaCarga
       From Sys.Dual;
	 	Exception	When Others Then 
	 		   :GLOBAL.RemesaCarga:='77777';   
		End;
	Exception
		When Others Then
			PKG_MSGS.Mensaje_Error('Ocurrio un error al obtener la informaciÃ³n del siniestro [P_LLENAR] SqlErrm[ '||SqlErrm||' ]');
			Return;
	End;