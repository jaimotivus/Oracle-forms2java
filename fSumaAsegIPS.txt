	FUNCTION fSumaAsegIPS( p_sucursal 				IN CARH_RIESGOS_CUBIERTOS.CARC_CASU_CD_SUCURSAL%type,
                         p_ramo		  				IN CARH_RIESGOS_CUBIERTOS.CARC_CARP_CD_RAMO%type,
                         p_numpoliza				IN CARH_RIESGOS_CUBIERTOS.CARC_CAPO_NU_POLIZA%type,
                         p_certificado			IN CARH_RIESGOS_CUBIERTOS.CARC_CACE_NU_CERTIFICADO%type,
                         p_ramocont					IN CARH_RIESGOS_CUBIERTOS.CARC_CARB_CD_RAMO%type,
                         p_cobertura				IN CARH_RIESGOS_CUBIERTOS.CARC_CACB_CD_COBERTURA%type,
                         p_fecha_ocurrencia	IN CARH_RIESGOS_CUBIERTOS.CARC_FE_EFECTIVA%type,
                         p_tipo_producto		IN sint_producto_coberturas.sip_cdcobertura_a%TYPE) RETURN NUMBER IS
		V_MTOSUMA  CARH_RIESGOS_CUBIERTOS.CARC_MT_SUMA_ASEGURADA%TYPE;
		w_ips      sint_producto_coberturas.sip_cdcobertura_a%TYPE	:= 'IPS';
		w_ivs      sint_producto_coberturas.sip_cdcobertura_a%TYPE	:= 'IVS';
	 
	 /*  RBC para IPS - Obtiene Suma Asegurada por Cobertura */
	BEGIN
    IF p_tipo_producto = W_IVS THEN
			BEGIN
				SELECT MAX(SUMA) 
				  INTO V_MTOSUMA 
				  FROM ( SELECT carc_mt_suma_asegurada suma
							   	 FROM carh_riesgos_cubiertos a, 
								 				cart_coberturas, 
								 				cart_ramos_contables	
								  WHERE a.carc_casu_cd_sucursal				= p_sucursal
								 		AND a.carc_carp_cd_ramo 		  		= p_ramo
								 		AND a.carc_capo_nu_poliza 				= p_numpoliza
								 		AND a.carc_cace_nu_certificado 		= p_certificado
								 		AND a.CARC_CARB_CD_RAMO						= p_ramocont
								 		AND a.CARC_CACB_CD_COBERTURA			= p_cobertura
								 		AND TRUNC(a.carc_fe_efectiva) 		= :DT_GLOBAL.SICC_CARC_FE_EFECTIVA
								 		AND (a.carc_nu_asegurado 					= :cg$ctrl.cgc$beneficiario OR 
								 			 :cg$ctrl.cgc$beneficiario IS NULL)
								 		AND cacb_carb_cd_ramo 					  = a.carc_carb_cd_ramo
								 		AND cacb_cd_cobertura 					  = a.carc_cacb_cd_cobertura
								 		AND carb_cd_ramo 									= cacb_carb_cd_ramo
							 	 UNION
						   	 SELECT nvl(fc.cafc_mt_fondo_acumulado,0) Suma 							       
								   FROM cart_fondo_certificados fc, 
												cart_riesgos_cubiertos a, 
												cart_coberturas b, 
												cart_ramos_contables c
								  WHERE fc.cafc_cd_sucursal      = a.carc_casu_cd_sucursal 
										AND fc.cafc_cd_ramo          = a.carc_carp_cd_ramo
										AND fc.cafc_nu_poliza        = a.carc_capo_nu_poliza--7223
										AND fc.cafc_nu_certificado   = a.carc_cace_nu_certificado   
										AND b.cacb_carb_cd_ramo      = a.carc_carb_cd_ramo
										AND b.cacb_cd_cobertura      = a.carc_cacb_cd_cobertura
										AND c.carb_cd_ramo           = b.cacb_carb_cd_ramo           
										AND fc.cafc_cd_sucursal      = p_sucursal
										AND fc.cafc_cd_ramo          = p_ramo
										AND fc.cafc_nu_poliza        = p_numpoliza
										AND fc.cafc_nu_certificado   = P_certificado
										AND a.carc_cacb_cd_cobertura = p_cobertura	
										AND fc.cafc_fe_rendimiento	 =(SELECT Max(fc2.cafc_fe_rendimiento) 
																										 FROM cart_fondo_certificados fc2
																										where fc2.cafc_cd_sucursal     = fc.cafc_cd_sucursal 
																										  AND fc2.cafc_cd_ramo         = fc.cafc_cd_ramo
																										  AND fc2.cafc_nu_poliza       = fc.cafc_nu_poliza
																										  AND fc2.cafc_nu_certificado  = fc.cafc_nu_certificado 
																										  AND fc2.cafc_fe_rendimiento <= P_fecha_ocurrencia)) SUMAS;							                                          
			EXCEPTION 
				WHEN NO_DATA_FOUND THEN
					V_MTOSUMA	:= 0.00;					   				  
				WHEN TOO_MANY_ROWS THEN 
					V_MTOSUMA	:= 0.00;							      
			END;				
    ELSE
			IF p_tipo_producto = W_IPS THEN
				BEGIN
					SELECT MAX(SUMA) 
					  INTO V_MTOSUMA 
					  FROM ( SELECT carc_mt_suma_asegurada suma
							  	   FROM carh_riesgos_cubiertos a, 
											    cart_coberturas, 
											    cart_ramos_contables	
							      WHERE a.carc_casu_cd_sucursal			= p_sucursal
									    AND a.carc_carp_cd_ramo 		  	= p_ramo
									    AND a.carc_capo_nu_poliza 			= p_numpoliza
									    AND a.carc_cace_nu_certificado 	= p_certificado
									    AND a.CARC_CARB_CD_RAMO					= p_ramocont
									    AND a.CARC_CACB_CD_COBERTURA		= p_cobertura
									    AND TRUNC(a.carc_fe_efectiva) 	= :DT_GLOBAL.SICC_CARC_FE_EFECTIVA
									    AND (a.carc_nu_asegurado 				= :cg$ctrl.cgc$beneficiario OR 
										     	:cg$ctrl.cgc$beneficiario IS NULL)
									    AND cacb_carb_cd_ramo 					= a.carc_carb_cd_ramo
									    AND cacb_cd_cobertura 					= a.carc_cacb_cd_cobertura
									    AND carb_cd_ramo 								= cacb_carb_cd_ramo
					UNION
					SELECT nvl(hir.mt_fondo,0) Suma			          				
					  FROM cart_estructura_certificados hir, 
							   cart_riesgos_cubiertos a, 
							   cart_coberturas b, 
							   cart_ramos_contables c
					 WHERE hir.cd_sucursal          = a.carc_casu_cd_sucursal 
					   AND hir.cd_ramo              = a.carc_carp_cd_ramo
					   AND hir.nu_poliza            = a.carc_capo_nu_poliza--7223
					   AND hir.nu_certificado       = a.carc_cace_nu_certificado   
					   AND b.cacb_carb_cd_ramo      = a.carc_carb_cd_ramo
					   AND b.cacb_cd_cobertura      = a.carc_cacb_cd_cobertura
					   AND c.carb_cd_ramo           = b.cacb_carb_cd_ramo           
					   AND hir.cd_sucursal          = p_sucursal
					   AND hir.cd_ramo              = p_ramo
					   AND hir.nu_poliza            = p_numpoliza
					   AND hir.nu_certificado       = p_certificado
					   AND a.carc_cacb_cd_cobertura = p_cobertura	        
					   AND hir.fe_rendimiento		= (SELECT MAX(hir2.fe_rendimiento) 
								 													 FROM cart_estructura_certificados hir2
																				  WHERE hir2.cd_sucursal     = hir.cd_sucursal 
																					  AND hir2.cd_ramo         = hir.cd_ramo
																					  AND hir2.nu_poliza       = hir.nu_poliza
																					  AND hir2.nu_certificado  = hir.nu_certificado 
																					  AND hir2.fe_rendimiento <= P_fecha_ocurrencia)) SUMAS;    							
				EXCEPTION 
					WHEN NO_DATA_FOUND THEN
						V_MTOSUMA := 0.00;								   				
					WHEN TOO_MANY_ROWS THEN 
						V_MTOSUMA := 0.00;										    			
				END;       
			END IF;	
		END IF;
		RETURN V_MTOSUMA;
	EXCEPTION 
		WHEN OTHERS THEN
			RETURN V_MTOSUMA;	
	END;